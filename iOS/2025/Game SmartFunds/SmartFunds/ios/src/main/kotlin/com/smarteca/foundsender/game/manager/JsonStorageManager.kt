package com.smarteca.foundsender.game.manager

import org.robovm.apple.foundation.*

object JsonStorageManager {

    private fun getFilePath(fileName: String): String {
        val directory = NSPathUtilities.getDocumentsDirectory()
        return "$directory/$fileName.json"
    }

    // üîπ –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è JSON —É —Ñ–∞–π–ª
    fun saveStringToFile(fileName: String, json: String) {
        val filePath = getFilePath(fileName)
        val nsString = NSString(json)
        try {
            nsString.writeFile(filePath, true, NSStringEncoding.UTF8)
        } catch (e: NSErrorException) {
            e.printStackTrace()
        }
    }

    // üîπ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è JSON —ñ–∑ —Ñ–∞–π–ª—É
    fun loadStringFromFile(fileName: String): String? {
        val filePath = getFilePath(fileName)
        return try {
            NSString.readFile(filePath, NSStringEncoding.UTF8)
        } catch (e: NSErrorException) {
            null // –Ø–∫—â–æ —Ñ–∞–π–ª –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∞–±–æ —Å—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞
        }
    }

    // üîπ –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Å–ø–∏—Å–∫—É –≤—Å—ñ—Ö —Ñ–∞–π–ª—ñ–≤ —É Documents
    fun listFilesInDocuments(): List<String> {
        val fileManager = NSFileManager.getDefaultManager()
        val documentsPath = NSPathUtilities.getDocumentsDirectory()

        val errorPtr = NSError.NSErrorPtr()
        val files = fileManager.getSubpathsAtPath(documentsPath)

        if (errorPtr.get() != null) {
            println("Error reading directory: ${errorPtr.get()?.localizedDescription}")
            return emptyList()
        }

        return files
    }

    // üîπ –í–∏–¥–∞–ª–µ–Ω–Ω—è JSON-—Ñ–∞–π–ª—É
    fun deleteFile(fileName: String) {
        val fileManager = NSFileManager.getDefaultManager()
        val filePath = getFilePath(fileName)

        try {
            fileManager.removeItemAtPath(filePath)
        } catch (e: NSErrorException) {
            println("Error deleting file: ${e.message}")
        }
    }

}
